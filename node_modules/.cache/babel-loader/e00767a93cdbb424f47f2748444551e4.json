{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms/form-reusable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  let day = [\"\"];\n\n  for (var i = 1; i < 32; i++) {\n    day.push(i);\n  }\n\n  console.log(day);\n\n  const renderForm = () => {\n    console.log(props.input.require);\n\n    switch (props.input.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), errors.requiredField && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.title,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: props.input.name,\n            className: \"form-select form-select-sm\",\n            children: props.input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placeholder,\n            \"aria-describedby\": props.input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return renderForm();\n}\n\n_s(Form, \"+Nrz0BYUZDnkIuhmBbPsJSfSlWM=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms/form-reusable.js"],"names":["React","useForm","Form","props","register","handleSubmit","watch","errors","day","i","push","console","log","renderForm","input","require","type","name","title","placholder","requiredField","smallText","max","placeholder","options","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from \"react-hook-form\";\n\n\nexport default function Form(props) {\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    let day=[\"\"]\n    for(var i=1;i<32;i++){\n        day.push(i)\n    }\n    console.log(day)\n    const renderForm =()=>{\n        console.log(props.input.require)\n        switch (props.input.type) {\n            case 'text':\n                return(\n                    <div class=\"form-group\">\n                    <label for={props.input.name}>{props.input.title}</label>\n                    <input type={props.input.type} name={props.input.name} class=\"form-control form-control-sm\" placeholder={props.input.placholder} />\n                    {errors.requiredField && <span>This field is required</span>}\n                    <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                  </div>\n                )\n                case 'date':\n                    return(\n                        <div class=\"form-group\">\n                        <label for='date'>{props.input.title}</label>\n                        <input type={props.input.type} name={props.input.name} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n\n                      </div>\n                    )\n                case 'select':\n                    return(\n                        <div>\n                        <label for={props.input.title}>{props.input.title}</label>\n                        <select name={props.input.name} className='form-select form-select-sm'>\n                            {props.input.options.map((option)=>(\n                                <option value={option}>{option}</option>\n                            ))}\n                        </select>\n                        </div>\n                        )\n                case 'email':\n                    return(\n                        <div class=\"form-group\">\n                            <label for={props.input.name}>{props.input.title}</label>\n                                <input type={props.input.type} name={props.input.name} class=\"form-control form-control-sm\" placeholder={props.input.placeholder} aria-describedby={props.input.name} />\n                                <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                        </div>\n                            )\n                \n                    \n        \n            default:\n                break;\n        }\n\n    }\n  return (\n      renderForm()\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}