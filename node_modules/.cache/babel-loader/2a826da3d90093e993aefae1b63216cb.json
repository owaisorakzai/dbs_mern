{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms/form-reusable.js\";\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  register,\n  handleSubmit,\n  watch,\n  errors\n} = useForm();\nexport default function Form(props) {\n  const renderForm = () => {\n    switch (props.input.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            ...register(props.input.name),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placholder,\n            required: props.input.require\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.title,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: props.input.name,\n            className: \"form-select form-select-sm\",\n            children: props.input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placeholder,\n            \"aria-describedby\": props.input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return renderForm();\n}\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms/form-reusable.js"],"names":["React","useForm","register","handleSubmit","watch","errors","Form","props","renderForm","input","type","name","title","placholder","require","smallText","max","placeholder","options","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from \"react-hook-form\";\nconst { register, handleSubmit, watch, errors } = useForm();\n\n\nexport default function Form(props) {\n\n    const renderForm =()=>{\n        switch (props.input.type) {\n            case 'text':\n                    return(\n                        <div class=\"form-group\">\n                        <label for={props.input.name}>{props.input.title}</label>\n                        <input type={props.input.type} {...register(props.input.name)}  class=\"form-control form-control-sm\" placeholder={props.input.placholder} required={props.input.require} />\n                        \n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n    \n    \n                      </div>\n                    )\n                \n                case 'date':\n                    return(\n                        <div class=\"form-group\">\n                        <label for='date'>{props.input.title}</label>\n                        <input type={props.input.type} name={props.input.name} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n\n                      </div>\n                    )\n                case 'select':\n                    return(\n                        <div>\n                        <label for={props.input.title}>{props.input.title}</label>\n                        <select name={props.input.name} className='form-select form-select-sm'>\n                            {props.input.options.map((option)=>(\n                                <option value={option}>{option}</option>\n                            ))}\n                        </select>\n                        </div>\n                        )\n                case 'email':\n                    return(\n                        <div class=\"form-group\">\n                            <label for={props.input.name}>{props.input.title}</label>\n                                <input type={props.input.type} name={props.input.name} class=\"form-control form-control-sm\" placeholder={props.input.placeholder} aria-describedby={props.input.name} />\n                                <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                        </div>\n                            )\n                \n                    \n        \n            default:\n                break;\n        }\n\n    }\n  return (\n      renderForm()\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}