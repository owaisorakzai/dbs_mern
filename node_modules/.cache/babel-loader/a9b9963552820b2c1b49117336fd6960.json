{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms/form-reusable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  function handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  const {\n    register\n  } = useFormContext();\n\n  const change = name => e => {\n    console.log(name);\n  };\n\n  const renderForm = () => {\n    switch (props.input.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            onChange: handleChange,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placholder,\n            required: props.input.require\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, props.input.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            value: props.input.value,\n            onChange: props.input.change,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.title,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: props.input.name,\n            onChange: evt => change(evt),\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            className: \"form-select form-select-sm\",\n            children: props.input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placeholder,\n            \"aria-describedby\": props.input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return renderForm();\n}\n\n_s(Form, \"Bo7qepwtYtSDgCU3rOjk+AUHavk=\", false, function () {\n  return [useFormContext];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms/form-reusable.js"],"names":["React","useForm","FormProvider","useFormContext","Form","props","handleChange","event","console","log","target","value","register","change","name","e","renderForm","input","type","title","required","require","placholder","smallText","max","placeholder","evt","options","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\n\n\n\n\nexport default function Form(props) {\n    function handleChange(event) {\n        console.log(event.target.value);\n      }\n    const { register } = useFormContext();\n    const change = (name) => (e) => {\n        console.log(name)\n    };\n\n    const renderForm =()=>{\n        switch (props.input.type) {\n            case 'text':\n                    return(\n                        <div class=\"form-group\" key={props.input.name}>\n                        <label for={props.input.name}>{props.input.title}</label>\n                        <input type={props.input.type} onChange={handleChange} name={props.input.name} {...register(props.input.name, { required: props.input.require })}  class=\"form-control form-control-sm\" placeholder={props.input.placholder} required={props.input.require} />\n                        \n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n    \n    \n                      </div>\n                    )\n                case 'date':\n                    return(\n                        <div class=\"form-group\">\n                        <label for='date'>{props.input.title}</label>\n                        <input type={props.input.type} value={props.input.value} onChange={props.input.change} name={props.input.name} {...register(props.input.name, { required: props.input.require })} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n\n                      </div>\n                    )\n                case 'select':\n                    return(\n                        <div>\n                        <label for={props.input.title}>{props.input.title}</label>\n                        <select name={props.input.name} onChange={(evt) => change(evt)} {...register(props.input.name, { required: props.input.require })} className='form-select form-select-sm'>\n                            {props.input.options.map((option)=>(\n                                <option value={option}>{option}</option>\n                            ))}\n                        </select>\n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                        </div>\n                        )\n                case 'email':\n                    return(\n                        <div class=\"form-group\">\n                            <label for={props.input.name}>{props.input.title}</label>\n                                <input type={props.input.type} name={props.input.name} {...register(props.input.name, { required: props.input.require })} class=\"form-control form-control-sm\" placeholder={props.input.placeholder} aria-describedby={props.input.name} />\n                                <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n                        </div>\n                            )\n                    \n        \n            default:\n                break;\n        }\n\n    }\n  return (\n      renderForm()\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}