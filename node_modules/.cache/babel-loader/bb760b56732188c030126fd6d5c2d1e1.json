{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms-extend/payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\"; // Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\n\nimport CheckoutForm from './check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51HEE1xFzx5jG4jjg7re03HawPlyc6BTpE7ZZJYaUrrcgsSlPskIRjdCY0vAlaXbozfW9DqTHiofTlqnWO8Iy211X00L9q3IkPk\");\nexport default function Payment() {\n  _s();\n\n  const [clientSecret, setClientSecret] = useState(\"\");\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/pay\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"xl-tshirt\"\n        }]\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, []);\n  const appearance = {\n    theme: 'stripe'\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"jqw4P0KD6AlEQm6tlb46UlrlFAA=\");\n\n_c = Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms-extend/payment.js"],"names":["React","useState","useEffect","loadStripe","Elements","CheckoutForm","stripePromise","Payment","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","items","id","then","res","json","data","appearance","theme","options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CAGA;AACA;AACA;;AAEA,OAAOC,YAAP,MAAyB,SAAzB;;AACA,MAAMC,aAAa,GAAGH,UAAU,CAAC,6GAAD,CAAhC;AAEA,eAAe,SAASI,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,KAAK,CAAC,MAAD,EAAS;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFG;AAGZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAD;AAAT,OAAf;AAHM,KAAT,CAAL,CAKGC,IALH,CAKSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALjB,EAMGF,IANH,CAMSG,IAAD,IAAUZ,eAAe,CAACY,IAAI,CAACb,YAAN,CANjC;AAOD,GATQ,EASN,EATM,CAAT;AAWA,QAAMc,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE;AADU,GAAnB;AAGA,QAAMC,OAAO,GAAG;AACdhB,IAAAA,YADc;AAEdc,IAAAA;AAFc,GAAhB;AAIE,sBACA,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEhB,aAAlB;AAAA,2BACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH;;GA3BuBC,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\n\nimport CheckoutForm from './check';\nconst stripePromise = loadStripe(\"pk_test_51HEE1xFzx5jG4jjg7re03HawPlyc6BTpE7ZZJYaUrrcgsSlPskIRjdCY0vAlaXbozfW9DqTHiofTlqnWO8Iy211X00L9q3IkPk\");\n\nexport default function Payment() {\n  const [clientSecret, setClientSecret] = useState(\"\");\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/pay\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] }),\n    })\n      .then((res) => res.json())\n      .then((data) => setClientSecret(data.clientSecret));\n  }, []);\n\n  const appearance = {\n    theme: 'stripe',\n  };\n  const options = {\n    clientSecret,\n    appearance,\n  };\n    return (\n    <Elements stripe={stripePromise}>\n    <CheckoutForm />\n    </Elements>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}