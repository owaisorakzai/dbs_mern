{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms/form-reusable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport './forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = useFormContext();\n\n  const change = name => e => {\n    console.log(name);\n  };\n\n  const renderForm = () => {\n    switch (props.input.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [props.input.require == true ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"red\",\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            ...register(props.input.name, {\n              required: props.input.require,\n              onChange: props.input.change\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placholder,\n            required: props.input.require\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), console.log(errors)]\n        }, props.input.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [props.input.require == true ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"red\",\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            value: props.input.value,\n            onChange: props.input.change,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require,\n              onChange: props.input.change\n            }),\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [props.input.require == true ? /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"red\",\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            value: props.input.value,\n            onChange: props.input.change,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require,\n              onChange: props.input.change\n            }),\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.title,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: props.input.name,\n            onChange: evt => change(evt),\n            ...register(props.input.name, {\n              required: props.input.require,\n              onChange: props.input.change\n            }),\n            className: \"form-select form-select-sm\",\n            children: props.input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this);\n\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placeholder,\n            \"aria-describedby\": props.input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return renderForm();\n}\n\n_s(Form, \"nApRpUpP7dmsqvap3Xmj1tAAJYA=\", false, function () {\n  return [useFormContext];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms/form-reusable.js"],"names":["React","useFormContext","Form","props","register","formState","errors","change","name","e","console","log","renderForm","input","type","require","title","required","onChange","placholder","smallText","value","max","placeholder","evt","options","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormContext } from \"react-hook-form\";\nimport './forms.css'\n\n\nexport default function Form(props) {\n    const { register,formState: { errors } } = useFormContext();\n    const change = (name) => (e) => {\n        console.log(name)\n    };\n\n    const renderForm =()=>{\n        switch (props.input.type) {\n            case 'text':\n                    return(\n                        <div class=\"form-group\" key={props.input.name}>\n                        {props.input.require==true ?(<label className='red' for={props.input.name}>{props.input.title}</label>):\n                        <label for={props.input.name}>{props.input.title}</label>\n                    }\n                        \n                        <input type={props.input.type} {...register(props.input.name, { required: props.input.require ,onChange: props.input.change})}  class=\"form-control form-control-sm\" placeholder={props.input.placholder} required={props.input.require} />\n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n                        {console.log(errors)}\n                      </div>\n                    )\n                case 'date':\n                    return(\n                        <div class=\"form-group\">\n                        {props.input.require==true ?(<label className='red' for={props.input.name}>{props.input.title}</label>):\n                        <label for={props.input.name}>{props.input.title}</label>\n                    }\n                        <input type={props.input.type} value={props.input.value} onChange={props.input.change} name={props.input.name} {...register(props.input.name, { required: props.input.require ,onChange: props.input.change})} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n\n                      </div>\n                    )\n                case 'date':\n                        return(\n                            <div class=\"form-group\">\n                        {props.input.require==true ?(<label className='red' for={props.input.name}>{props.input.title}</label>):\n                        <label for={props.input.name}>{props.input.title}</label>\n                    }\n                            <input type={props.input.type} value={props.input.value} onChange={props.input.change} name={props.input.name} {...register(props.input.name, { required: props.input.require ,onChange: props.input.change})} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n    \n                          </div>\n                        )\n                case 'select':\n                    return(\n                        <div>\n                        <label for={props.input.title}>{props.input.title}</label>\n                        <select name={props.input.name} onChange={(evt) => change(evt)} {...register(props.input.name, { required: props.input.require,onChange: props.input.change })} className='form-select form-select-sm'>\n                            {props.input.options.map((option)=>(\n                                <option value={option}>{option}</option>\n                            ))}\n                        </select>\n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                        </div>\n                        )\n                case 'email':\n                    return(\n                        <div class=\"form-group\">\n                            <label for={props.input.name}>{props.input.title}</label>\n                                <input type={props.input.type} name={props.input.name} {...register(props.input.name, { required: props.input.require })} class=\"form-control form-control-sm\" placeholder={props.input.placeholder} aria-describedby={props.input.name} />\n                                <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n                        </div>\n                            )\n                    \n        \n            default:\n                break;\n        }\n\n    }\n  return (\n      renderForm()\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}