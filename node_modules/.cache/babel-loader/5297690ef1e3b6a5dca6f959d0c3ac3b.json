{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/dashboard/stats/stats.js\";\nimport Nav from '../nav';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Date from '../components/date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Stats extends Component {\n  constructor(props) {\n    super(props);\n    this.array1 = [\"createdAt\", \"Name\", \"Surname\", \"Phone Number\", \"Email\", \"Address\", \"Status\"];\n    this.state = {\n      users: [],\n      partners: [],\n      collection: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4242/users/').then(res => {\n      this.setState({\n        users: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://localhost:4242/partners/').then(res => {\n      this.setState({\n        partners: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    this.state.partners.forEach(partner => {\n      let unpaid = this.state.users.filter(user => {\n        return partner._id == user.lead, user.payment == \"Unpaid\";\n      }).length;\n      let paid = this.state.users.filter(user => {\n        return partner._id == user.lead, user.payment == \"Paid\";\n      }).length;\n      let temp = {\n        name: partner.name,\n        unpaid: unpaid,\n        paid: paid,\n        total: paid + unpaid\n      };\n      this.setState({\n        collection: temp\n      });\n    });\n  }\n\n  partnerName(partner) {\n    return this.state.users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: partner.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  paidCount(partner) {\n    return this.state.users.filter(user => {\n      return user.lead == partner._id, user.status == 'Paid';\n    }).length;\n  }\n\n  unpaidCount(partner) {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: this.state.users.filter(user => {\n        return user.lead == partner._id, user.status == 'Unpaid';\n      }).length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table .table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Partner Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Paid Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.partners.map(partner => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [this.partnerName(partner), this.paidCount(partner), this.unpaidCount(partner)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/dashboard/stats/stats.js"],"names":["Nav","axios","React","Component","Date","Stats","constructor","props","array1","state","users","partners","collection","componentDidMount","get","then","res","setState","data","catch","error","console","log","forEach","partner","unpaid","filter","user","_id","lead","payment","length","paid","temp","name","total","partnerName","map","paidCount","status","unpaidCount","render"],"mappings":"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","sourcesContent":["import Nav from '../nav'\nimport axios from 'axios';\nimport React, {Component } from 'react';\nimport Date from '../components/date';\n\n\nexport default class Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.array1=[\"createdAt\",\"Name\",\"Surname\",\"Phone Number\",\"Email\",\"Address\",\"Status\"]\n    this.state={\n      users:[],\n      partners:[],\n      collection:[]\n    }\n  } \n  componentDidMount(){\n        axios.get('http://localhost:4242/users/')\n        .then(res => {\n          this.setState({\n            users:res.data\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        axios.get('http://localhost:4242/partners/')\n        .then(res => {\n          this.setState({\n            partners:res.data\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        this.state.partners.forEach((partner)=>{\n          let unpaid=this.state.users.filter(user=>{\n            return(\n              partner._id==user.lead,\n              user.payment==\"Unpaid\"\n            )\n\n          }).length\n          let paid=this.state.users.filter(user=>{\n            return(\n              partner._id==user.lead,\n              user.payment==\"Paid\"\n            )\n\n          }).length\n          let temp={\n            name:partner.name,\n            unpaid:unpaid,\n            paid:paid,\n            total:paid+unpaid\n          }\n          this.setState({\n            collection:temp\n          })\n        })\n  }\n  partnerName(partner){\n    return (this.state.users.map((user)=>{\n        return (<td>{partner.name}</td>)\n      \n    })\n    )\n  }\n  paidCount(partner){\n    return(\n      this.state.users.filter((user)=>{\n        return(\n        user.lead==partner._id,\n        user.status=='Paid'\n        )\n      }).length\n    )\n  }\n  unpaidCount(partner){\n    return(\n      <td>\n      {this.state.users.filter((user)=>{\n        return(\n        user.lead==partner._id,\n        user.status=='Unpaid')\n      }).length}\n    </td>\n    )}\n render(){\n  \n  return (\n    <>\n      <Nav/>\n      <div className='container'>\n          <table class=\"table .table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Partner Name</th>\n                <th scope=\"col\">Paid Order</th>\n\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.partners.map((partner)=>{\n              return(\n              <tr>\n                {this.partnerName(partner)}\n                {this.paidCount(partner)}\n                {this.unpaidCount(partner)}\n\n              </tr>\n              )\n              })}\n\n            </tbody>\n            </table>\n      </div>\n</>\n  )\n}\n}\n"]},"metadata":{},"sourceType":"module"}