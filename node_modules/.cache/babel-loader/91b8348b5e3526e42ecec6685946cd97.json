{"ast":null,"code":"var _jsxFileName = \"/home/owais/bds_app/src/components.js/forms/form-reusable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const {\n    register\n  } = useFormContext();\n\n  const change = name => e => {\n    alert('Jel');\n  };\n\n  const renderForm = () => {\n    switch (props.input.type) {\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placholder,\n            required: props.input.require\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, props.input.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"date\",\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            onChange: change(props.input.name),\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            max: props.input.max,\n            class: \"form-control form-control-sm\",\n            id: \"forename\",\n            placeholder: props.input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n\n      case 'select':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.title,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: props.input.name,\n            onChange: evt => change(evt),\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            className: \"form-select form-select-sm\",\n            children: props.input.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: props.input.name,\n            children: props.input.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.input.type,\n            name: props.input.name,\n            ...register(props.input.name, {\n              required: props.input.require\n            }),\n            class: \"form-control form-control-sm\",\n            placeholder: props.input.placeholder,\n            \"aria-describedby\": props.input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: props.input.name,\n            class: \"form-text\",\n            children: props.input.smallText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return renderForm();\n}\n\n_s(Form, \"Bo7qepwtYtSDgCU3rOjk+AUHavk=\", false, function () {\n  return [useFormContext];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/owais/bds_app/src/components.js/forms/form-reusable.js"],"names":["React","useForm","FormProvider","useFormContext","Form","props","register","change","name","e","alert","renderForm","input","type","title","required","require","placholder","smallText","max","placeholder","evt","options","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\n\n\n\n\nexport default function Form(props) {\n    const { register } = useFormContext();\n    const change = (name) => (e) => {\n        alert('Jel')\n    };\n\n    const renderForm =()=>{\n        switch (props.input.type) {\n            case 'text':\n                    return(\n                        <div class=\"form-group\" key={props.input.name}>\n                        <label for={props.input.name}>{props.input.title}</label>\n                        <input type={props.input.type} name={props.input.name} {...register(props.input.name, { required: props.input.require })}  class=\"form-control form-control-sm\" placeholder={props.input.placholder} required={props.input.require} />\n                        \n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n    \n    \n                      </div>\n                    )\n                case 'date':\n                    return(\n                        <div class=\"form-group\">\n                        <label for='date'>{props.input.title}</label>\n                        <input type={props.input.type} onChange={change(props.input.name)} name={props.input.name} {...register(props.input.name, { required: props.input.require })} max={props.input.max} class=\"form-control form-control-sm\" id=\"forename\" placeholder={props.input.placeholder} />\n\n                      </div>\n                    )\n                case 'select':\n                    return(\n                        <div>\n                        <label for={props.input.title}>{props.input.title}</label>\n                        <select name={props.input.name} onChange={(evt) => change(evt)} {...register(props.input.name, { required: props.input.require })} className='form-select form-select-sm'>\n                            {props.input.options.map((option)=>(\n                                <option value={option}>{option}</option>\n                            ))}\n                        </select>\n                        <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n\n                        </div>\n                        )\n                case 'email':\n                    return(\n                        <div class=\"form-group\">\n                            <label for={props.input.name}>{props.input.title}</label>\n                                <input type={props.input.type} name={props.input.name} {...register(props.input.name, { required: props.input.require })} class=\"form-control form-control-sm\" placeholder={props.input.placeholder} aria-describedby={props.input.name} />\n                                <div id={props.input.name} class=\"form-text\">{props.input.smallText}</div>\n                        </div>\n                            )\n                    \n        \n            default:\n                break;\n        }\n\n    }\n  return (\n      renderForm()\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}